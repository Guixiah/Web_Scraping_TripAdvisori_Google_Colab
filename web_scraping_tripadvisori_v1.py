# -*- coding: utf-8 -*-
"""web_scraping_tripadvisori_V1.2.pynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bMtem_1-llthumTxOKn53dh4UAXSHcc2
"""

# Importa as bibliotecas necessarias.
import requests
from bs4 import BeautifulSoup
import pandas as pd
from google.colab import files
from datetime import datetime

!pip install Selenium
!apt-get update 
!apt install chromium-chromedriver
!cp /usr/lib/chromium-browser/chromedriver /usr/bin
import sys
sys.path.insert(0,'/usr/lib/chromium-browser/chromedriver')

from selenium import webdriver
chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument('--headless')
chrome_options.add_argument('--no-sandbox')
chrome_options.add_argument('--disable-dev-shm-usage')
driver = webdriver.Chrome('chromedriver',options=chrome_options)

#Carrega o Arquivo.
print('Insira a tabela com links') # Tabelas Bases com os links.
uploaded = files.upload()
print('Insira a tabela resultado antiga de ontem') # Ultima Tabela atualizada
uploaded = files.upload()

#Trata o arquivo carregado com os links.
df = pd.read_excel('URL_HOTEIS_BH.xlsx') # le a tabela com os links.
Cod_hotel = list(df['COD.']) #Transforma as colunas em linha.
Hotel = list(df['HOTEL']) #Transforma as colunas em linha.
Url_TRIPADVISOR = list(df['URL TRIPADVISOR']) #Transforma as colunas em linha.

# Cria as colunas.
N_Hotel = [] ##
Qtd_Avaliacoes = [] ##
Rank_Hotel = [] ##
Nota_Hotel = [] ##
Et_Rank = [] ##
Excelente = [] ##
Muito_Bom = [] ##
Razoavel = [] ##
Ruim = [] ##
Horrivel = [] ##

# Importa dos dados do TripAdvisor.
for i in Url_TRIPADVISOR: 
  driver.get(i)

  Nome_hotel = driver.find_element_by_class_name("fkWsC").text #Extrai o nome do hotel.
  Numero_Avaliacoes = driver.find_element_by_class_name("HFUqL").text #Extrai o Numero de Avaliações.
  Rank = driver.find_element_by_class_name("KeVaw").text #Extrai a classificação do hotel.
  Nota = driver.find_element_by_class_name("bvcwU").text #Extrai a nota referente ao hotel.
  Estatu_do_rank = driver.find_element_by_class_name("cNJsa").text # Extrai a classificação referente a nota do Hotel.
  Numero_de_avaliacoes = driver.find_elements_by_class_name("cpqJw") #Extrai a quantidade de avaliações do classe.

  # Desagrupa a classe das avaliações. 
  Contador=[]
  for texto in Numero_de_avaliacoes:
    Contador.append(texto.text)

  # Cria as Linhas da Tabela.
  N_Hotel.append(Nome_hotel)
  Qtd_Avaliacoes.append(Numero_Avaliacoes)
  Rank_Hotel.append(Rank)
  Nota_Hotel.append(Nota)
  Et_Rank.append(Estatu_do_rank)
  Excelente.append(Contador[0])
  Muito_Bom.append(Contador[1])
  Razoavel.append(Contador[2])
  Ruim.append(Contador[3])
  Horrivel.append(Contador[4])


#Trata as listas Criadas
for i,v in enumerate(Excelente):
  if '.' in v:
    item = v.replace(".","")
    Excelente[i] = item
  else:
    pass

for i,v in enumerate(Muito_Bom):
  if '.' in v:
    item = v.replace(".","")
    Muito_Bom[i] = item
  else:
    pass

for i,v in enumerate(Razoavel):
  if '.' in v:
    item = v.replace(".","")
    Razoavel[i] = item
  else:
    pass
    
for i,v in enumerate(Ruim):
  if ',' in v:
    item = v.replace(".","")
    Ruim[i] = item
  else:
    pass

for i,v in enumerate(Horrivel):
  if ',' in v:
    item = v.replace(".","")
    Horrivel[i] = item
  else:
    pass

#Cria a Tabela com os Dados Minerados.

Dic_Hoteis = {}
Data = datetime.today().strftime('%d/%m/%Y')
Coluna_Data = [Data]*len(N_Hotel)
Dic_Hoteis["Data"] = Coluna_Data.copy()
Dic_Hoteis["COD."] = Cod_hotel.copy()
Dic_Hoteis["Nome do Hotel"] = N_Hotel.copy()
Dic_Hoteis["Numero de Avaliações"] = Qtd_Avaliacoes.copy()
Dic_Hoteis["Classificação"] = Rank_Hotel.copy()
Dic_Hoteis["Nota"] = Nota_Hotel.copy()
Dic_Hoteis["Rank"] = Et_Rank.copy()
Dic_Hoteis["Excelente"] = Excelente.copy()
Dic_Hoteis["Muito Bom"] = Muito_Bom.copy()
Dic_Hoteis["Razoavel"] = Razoavel.copy()
Dic_Hoteis["Ruim"] = Ruim.copy()
Dic_Hoteis["Horrivel"] = Horrivel.copy()

#Baixa os Arquivos Criados e Atualizados.
#Arquivo de segurança.

Web_Atual = pd.DataFrame(Dic_Hoteis)
Web_Atual[["Excelente", "Muito Bom","Razoavel","Ruim","Horrivel"]] = Web_Atual[["Excelente", "Muito Bom","Razoavel","Ruim","Horrivel"]].apply(pd.to_numeric)
Dia = datetime.today().strftime('%d_%m_%Y')
Web_Atual.to_excel((f'web_scraping_tripadvisor_{Dia}.xlsx'),index=False )
files.download(f'web_scraping_tripadvisor_{Dia}.xlsx')

#Baixa os Arquivos Criados e Atualizados.
#Arquivo de segurança.

web_scraping_Antigo = pd.read_excel('web_scraping_tripadvisor.xlsx')
Concatenado = pd.concat([web_scraping_Antigo, Web_Atual], ignore_index=True)
Web_Atualizado = pd.DataFrame(Concatenado)
Web_Atualizado.to_excel(('web_scraping_tripadvisor.xlsx'),index=False )
files.download('web_scraping_tripadvisor.xlsx')
